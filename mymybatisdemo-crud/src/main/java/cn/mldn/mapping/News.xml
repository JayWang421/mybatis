<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 此处定义的是VO类与SQL语句之间的处理关系，namespace描述的是一个命名空间 -->
<mapper namespace="cn.mldn.mapping.NewsNS">

	<insert id="doCreate" parameterType="News" keyProperty="nid" useGeneratedKeys="true">
		insert into news (title,note) values(#{title},#{note}) ;
	</insert>
	
	<update id="doUpdate" parameterType="News">
		update news set title=#{title},note=#{note} where nid=#{nid} ;
	</update>
	
	<delete id="doDelete" parameterType="long">
		delete from news where nid=#{nid} ;
	</delete>
	
	<select id="findById" parameterType="long" resultType="News">
		select nid,title,note from news where nid=#{nid} ;
	</select>
	
	<select id="findAll" resultType="News">
		select nid,title,note from news ;
	</select>
	
	<select id="findAllMap" resultType="map">
		select nid,title,note from news ;
	</select>
	
	<select id="findAllSplit" parameterType="map" resultType="News">
		select nid,title,note from news where ${column} like #{keyWord} limit #{start},#{lineSize} ;
	</select>
	
	<select id="getAllCount" parameterType="map" resultType="long">
		select count(*) from news where ${column} like #{keyWord} ;
	</select>
	
	<!-- 以下为动态SQL -->
	<select id="findAllByTitle" parameterType="map" resultType="News">
		select nid,title,note from news
		<if test="title!=null and title!=&quot;&quot;">
			where title=#{title} ;
		</if>
	</select>
	
	<select id="findAllByNidAndTitle" parameterType="map" resultType="News">
		select nid,title,note from news
		<where>
			<choose>
				<when test="nid!=null and title!=null">
					nid=#{nid} and title=#{title}
				</when>
				<when test="nid!=null">
					nid=#{nid}
				</when>
				<!-- 否则 -->
				<otherwise>
					title=#{title}
				</otherwise>
			</choose>
		</where>
	</select>
	
	<select id="findAllTitle" parameterType="map" resultType="News">
		select nid,title,note from news
		<where>
			<if test="column!=null">
				${column}=#{data}
			</if>
		</where>
	</select>
	
	<update id="doUpdate2" parameterType="News" >
		update news
		<set>
			title=#{title},
			<if test="note!=null">
				note=#{note},
			</if>
		</set>
		<where>
			nid=#{nid}
		</where>
	</update>
	
	<select id="findByIds" parameterType="long" resultType="News">
		select nid,title,note from news
		<where>
			nid IN
			<foreach collection="array" open="(" close=")" separator="," item="ele">
				#{ele}
			</foreach>
		</where>
	</select>
</mapper>